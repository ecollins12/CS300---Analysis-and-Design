void printCourse(Course course) {
	cout << course.courseNumber << ", " << course.name << "\nPrerequisites " << course.prereq << endl;
	return;
}


void selectionSort(vector<Course>& courses) {
	//define min as int (index of the current minimum bid)
	int min = 0;
	int size_t = courses.size();
	int pos = 0;
	int j = 0;

	for (pos = 0; pos < size_t - 1; ++pos) {
		min = pos; //iterates and tracks the current position while sorting

		for (j = pos + 1; j < size_t; ++j) {
			if (courses[j].name < courses[min].name) {
				min = j;//loops through vector from left to right moving lower values to the right in order to sort
			}
		}
		//swap method to make min current
		if (min != pos)
			swap(courses[pos], courses[min]);
	}

}


		case 2://print sorted course list
			selectionSort(courses);//sorting function
			for (unsigned int i = 0; i < courses.size(); ++i) {//iterator and printing function
				printCourse(courses[i]);
			}
			cout << endl;

			break;
